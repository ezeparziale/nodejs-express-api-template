name: Testing

on: [push, pull_request]

jobs:

  testing:

    environment:
      name: test
      
    env:
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      BACKEND_CORS_ORIGINS: ${{secrets.BACKEND_CORS_ORIGINS}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      POSTGRES_HOSTNAME: ${{secrets.POSTGRES_HOSTNAME}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}

    services:
      postgres:
        image: postgres:14.7
        env:
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
